version: "3.9"
services:
    node-app:
        restart: always
        build:
            context: .
            dockerfile: Dockerfile.dev
        container_name: node-app
        hostname: nodeapp
        volumes:
            - /app/node_modules
            - .:/app
        ports: 
            - 4000:4000
        depends_on: 
            - mongodb
            # - redis-server
        environment:
            # REDIS_PASSWORD: 'test-password-do-not-use-123'
            # REDIS_PORT: '6379'
            # REDIS_HOST: 'redis-server'
            # COOKIE_NAME: 'cookiemonster'
            # SESSION_SECRET: 'mysessionsecret'
            NODE_ENV: ${NODE_ENV},
            MONGO_URI: mongodb://${MONGO_ROOT_USERNAME}:${MONGO_ROOT_PASSWORD}@mongodb
            JWT_SECRET: ${JWT_SECRET}
            GOOGLE_ID: ${GOOGLE_ID}
            GOOGLE_LOGIN_PASSWORD: ${GOOGLE_LOGIN_PASSWORD}
            EMAIL_USER: ${EMAIL_USER}
            EMAIL_PASSWORD: ${EMAIL_PASSWORD}
        networks: 
            - create-and-collab-api

    # redis-server:
    #     image: 'redis:alpine'
    #     ports: 
    #         - 6379:6379
    #     restart: 
    #         always
    #     volumes: 
    #         - ./myredis/redis.conf:/usr/local/etc/redis/redis.conf
    #         - ./myredis/data:/var/lib/redis
    #     command: redis-server --requirepass test-password-do-not-use-123
    #     networks: 
    #         - create-and-collab-api
    
    mongodb:
        image: mongo
        restart: always
        ports: 
            - 27017:27017
        environment: 
            MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USERNAME}
            MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD}
        volumes: 
            - mongodb-data:/data/db
        networks: 
            - create-and-collab-api

    mongo-express:
        image: mongo-express
        depends_on: 
            - mongodb
        ports: 
            - 8081:8081
        environment: 
            ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGO_ROOT_USERNAME}
            ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_ROOT_PASSWORD}
            ME_CONFIG_MONGODB_SERVER: mongodb
            ME_CONFIG_BASICAUTH_USERNAME: admin
            ME_CONFIG_BASICAUTH_PASSWORD: admin123456
        volumes: 
            - /mongodb-data
        networks: 
            - create-and-collab-api

    nginx:
        build:
            context: .
            dockerfile: nginxdockerfile
        container_name: nginx
        hostname: nginx
        ports:
            - "80:80"
        depends_on:
            - node-app
        networks:
            - create-and-collab-api

networks: 
    create-and-collab-api:
        driver: bridge
        
volumes: 
    mongodb-data:
        driver: local

